import csv
from datetime import datetime
import matplotlib.pyplot as plt
import matplotlib.cm as cm
import numpy as np
from collections import defaultdict

# Path to the CSV file generated by the authors and dates script
input_csv_file = "data/rootbeer_authors_dates.csv"  # Replace with your actual file path

# Dictionary to store data grouped by file and author
file_data = defaultdict(lambda: defaultdict(list))  # {filename: {author: [list_of_weeks]}}

# Parse the CSV file
with open(input_csv_file, 'r', encoding='utf-8') as file:
    reader = csv.DictReader(file)
    for row in reader:
        filename = row["Filename"]
        author = row["Author"]
        date_str = row["Date"]

        # Convert date to datetime object and calculate week of the year
        try:
            commit_date = datetime.strptime(date_str, "%Y-%m-%dT%H:%M:%SZ")
            week_number = commit_date.isocalendar()[1]  # ISO week number
            file_data[filename][author].append(week_number)
        except Exception as e:
            print(f"Error processing row: {row}. Error: {e}")

# Prepare data for the scatter plot
scatter_x = []  # Weeks
scatter_y = []  # File indices
colors = []     # Author colors
sizes = []      # Number of touches (circle size)
authors = set()

# Assign unique colors to authors
author_color_map = {}
color_palette = cm.get_cmap("tab10")  # Use a colormap with 10 distinct colors
color_index = 0

for file_index, (filename, authors_data) in enumerate(file_data.items()):
    for author, weeks in authors_data.items():
        if author not in author_color_map:
            author_color_map[author] = color_palette(color_index % color_palette.N)
            color_index += 1

        for week in weeks:
            scatter_x.append(week)
            scatter_y.append(file_index)
            colors.append(author_color_map[author])
            sizes.append(len(weeks) * 10)  # Scale circle size based on touches
            authors.add(author)

# Generate the scatter plot
plt.figure(figsize=(12, 8))

# Scatter plot
plt.scatter(scatter_x, scatter_y, c=colors, s=sizes, alpha=0.8, edgecolor='k')

# Add legend for authors
legend_handles = [plt.Line2D([0], [0], marker='o', color='w', markerfacecolor=color, markersize=10, label=author)
                  for author, color in author_color_map.items()]
plt.legend(handles=legend_handles, title="Authors", bbox_to_anchor=(1.05, 1), loc='upper left')

# Add labels and titles
plt.title("Scatter Plot of File Touches by Week and Author")
plt.xlabel("Week of the Year")
plt.ylabel("File Index")
plt.grid(alpha=0.3)

# Show plot
plt.tight_layout()
plt.show()
